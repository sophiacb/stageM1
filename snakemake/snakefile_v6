COVERAGE=["1", "2"]

rule all :
    input :        
        expand("subsampling_{coverage}X/fastqFile/{coverage}X_{replicat}.fastq", coverage=COVERAGE, replicat=[1,2]),
        #expand ("subsampling_{dataset}/canu/{dataset}X_{replicat}.contigs.fasta", dataset=DATASET, replicat=[1,2]),
        expand ("subsampling_{coverage}X/quast/{coverage}X_{replicat}/", coverage=COVERAGE, replicat=[1,2]),
        "test.png"

rule subsampling :
        input : "sample_40X_1.bam"
        output : "subsampling_{coverage}X/bamFile/{coverage}X_{replicat}.bam"
        run :
            cov = {coverage}
            from sequana import pacbio
            b = pacbio.BAMPacbio(input[0])
            b.random_selection(output_filename = output[0], reference_length=4086189, expected_coverage=cov)

rule bam2fastq :
        input : "subsampling_{coverage}X/bamFile/{coverage}X_{replicat}.bam"
        output : "subsampling_{coverage}X/fastqFile/{coverage}X_{replicat}.fastq"
        shell :  "bioconvert {input} {output}"

rule assembly :
        input : "subsampling_{coverage}X/fastqFile/{coverage}X_{replicat}.fastq"
        output :  "subsampling_{coverage}X/canu/{coverage}X_{replicat}.contigs.fasta"
        params :
                prefix = "{coverage}X_{replicat}",
                genSize = "4086189",
                techno = "-pacbio-raw"
        shell : "canuu -d {params.prefix} -p {params.prefix} genomeSize={params.genSize} {params.techno} {output}"

rule quast : 
        input : "subsampling_{coverage}X/canu/{coverage}X_{replicat}.contigs.fasta"
        output : "subsampling_{coverage}X/quast/{coverage}X_{replicat}/"
        shell : "python ../quast/quast-4.6.3/quast.py -o {output} -R NC_002929_Bpertussis.fasta {input}"

import glob
def func(n):
    files =  (glob.glob(n))
    print (files)
    return files

def funcCov(n):
    cov = n[12:13]
    return cov

rule plot :
    input : func('subsampling_*/canu/*.contigs.fasta')
    output : "test.png"
    run :
        ncov = len(COVERAGE)
        tabcontigs = [[]] * ncov
        for file in input : 
            cov = funcCov(file)
            from sequana import FastA
            ff = FastA(file)
            ncontig = len(ff)
            ind = COVERAGE.index(cov)
            tabcontigs[ind].append(ncontig)
	    print (tabcontigs)
        with open("contigs.txt", "w") as fh:
            fh.write(str(tabcontigs))
        from pylab import boxplot, savefig
        boxplot(tabcontigs)
        #BoxName=[]
        #xticks([1, 2], BoxName)
        savefig('test.png')
        