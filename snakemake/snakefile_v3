DATASET=["sample_1X"]
a,b = DATASET[0].split("_")
cov = int(b[0:-1]) 


rule all : 
        input: # expand("subsampling_{dataset}/fastqFile/{dataset}_{replicat}.fastq", dataset=DATASET, replicat=[1,2]),
                expand ("subsampling_{dataset}/canu/{dataset}_{replicat}/", dataset=DATASET, replicat=[1,2])

rule subsampling :
        input : "sample_40X_1.bam"
        output : "subsampling_{dataset}/bamFile/{dataset}_{replicat}.bam"
        run :
                from sequana import pacbio
                b = pacbio.BAMPacbio(input[0])
                b.random_selection(output_filename = output[0], reference_length=4086189, expected_coverage=cov)

rule bam2fastq : 
        input : "subsampling_{dataset}/bamFile/{dataset}_{replicat}.bam"
        output : "subsampling_{dataset}/fastqFile/{dataset}_{replicat}.fastq"
        shell :  "bioconvert {input} {output}"

rule assembly :
        input : "subsampling_{dataset}/fastqFile/{dataset}_{replicat}.fastq"
        output :  "subsampling_{dataset}/canu/{dataset}_{replicat}/"
        params : 
                prefix = "{dataset}_{replicat}",
                genSize = "4086189",
                techno = "-pacbio-raw"
        shell : "canu -d {params.prefix} -p {params.prefix} genomeSize={params.genSize} {params.techno} {output}" 

rule plot : 
	input : "subsampling_{dataset}/canu/{dataset}_{replicat}/{dataset}_{replicat}.contigs.fasta"
	output : "subsampling_{dataset}/canu/contigs.txt"
	run : 
		
